---
// src/pages/admin/login.astro
import BaseLayout from "../../layouts/BaseLayout.astro";
---

<BaseLayout title="Login - WYSIWYG Editor">
  <div class="login-container">
    <div class="login-card">
      <h1>Accedi all'area amministrativa</h1>

      <div class="tabs">
        <button class="tab-button active" data-tab="password">Password</button>
        <button class="tab-button" data-tab="magic-link">Magic Link</button>
      </div>

      <div class="tab-content" id="password-tab">
        <form id="login-form" class="login-form">
          <div class="form-group">
            <label for="email">Email</label>
            <input
              type="email"
              id="email"
              name="email"
              required
              placeholder="nome@esempio.com"
            />
          </div>

          <div class="form-group">
            <label for="password">Password</label>
            <input
              type="password"
              id="password"
              name="password"
              required
              placeholder="La tua password"
            />
          </div>

          <div class="error-message" id="error-message"></div>

          <button type="submit" class="login-button">Accedi</button>
        </form>
      </div>

      <div class="tab-content hidden" id="magic-link-tab">
        <form id="magic-link-form" class="login-form">
          <div class="form-group">
            <label for="magic-email">Email</label>
            <input
              type="email"
              id="magic-email"
              name="email"
              required
              placeholder="nome@esempio.com"
            />
          </div>

          <div class="info-message">
            Ti invieremo un link per accedere senza password.
          </div>

          <div class="error-message" id="magic-error-message"></div>

          <button type="submit" class="login-button">Invia Magic Link</button>
        </form>
      </div>

      <div class="success-message hidden" id="magic-success">
        <div class="success-icon">✓</div>
        <h3>Email inviata!</h3>
        <p>Controlla la tua casella email per il magic link di accesso.</p>
      </div>
    </div>
  </div>
</BaseLayout>

<script>
  // Importa il client Supabase
  import { auth } from "../../lib/supabase";

  document.addEventListener("DOMContentLoaded", () => {
    // Gestione delle tab
    const tabButtons = document.querySelectorAll(".tab-button");
    const tabContents = document.querySelectorAll(".tab-content");
    const successMessage = document.getElementById("magic-success");

    tabButtons.forEach((button) => {
      button.addEventListener("click", () => {
        // Rimuovi la classe active da tutti i pulsanti
        tabButtons.forEach((btn) => btn.classList.remove("active"));

        // Aggiungi la classe active al pulsante cliccato
        button.classList.add("active");

        // Nascondi tutti i contenuti delle tab
        tabContents.forEach((content) => content.classList.add("hidden"));
        successMessage.classList.add("hidden");

        // Mostra il contenuto della tab selezionata
        const tabId = button.getAttribute("data-tab");
        document.getElementById(`${tabId}-tab`).classList.remove("hidden");
      });
    });

    // Form di login con password
    const loginForm = document.getElementById("login-form");
    const errorMessage = document.getElementById("error-message");

    loginForm.addEventListener("submit", async (e) => {
      e.preventDefault();

      const email = document.getElementById("email").value;
      const password = document.getElementById("password").value;

      try {
        // Resetta il messaggio di errore
        errorMessage.textContent = "";

        // Bottone di login durante caricamento
        const loginButton = loginForm.querySelector('button[type="submit"]');
        loginButton.disabled = true;
        loginButton.textContent = "Accesso in corso...";

        // Effettua il login
        await auth.signInWithPassword(email, password);

        // Reindirizza all'area admin
        window.location.href = "/admin";
      } catch (error) {
        // Mostra il messaggio di errore
        errorMessage.textContent = error.message || "Errore durante il login";

        // Ripristina il bottone
        const loginButton = loginForm.querySelector('button[type="submit"]');
        loginButton.disabled = false;
        loginButton.textContent = "Accedi";
      }
    });

    // Form di login con magic link
    const magicLinkForm = document.getElementById("magic-link-form");
    const magicErrorMessage = document.getElementById("magic-error-message");

    magicLinkForm.addEventListener("submit", async (e) => {
      e.preventDefault();

      const email = document.getElementById("magic-email").value;

      try {
        // Resetta il messaggio di errore
        magicErrorMessage.textContent = "";

        // Bottone di login durante caricamento
        const magicButton = magicLinkForm.querySelector(
          'button[type="submit"]'
        );
        magicButton.disabled = true;
        magicButton.textContent = "Invio in corso...";

        // Invia il magic link
        await auth.signInWithOtp(email);

        // Nascondi il form e mostra il messaggio di successo
        document.getElementById("magic-link-tab").classList.add("hidden");
        successMessage.classList.remove("hidden");
      } catch (error) {
        // Mostra il messaggio di errore
        magicErrorMessage.textContent =
          error.message || "Errore durante l'invio del magic link";

        // Ripristina il bottone
        const magicButton = magicLinkForm.querySelector(
          'button[type="submit"]'
        );
        magicButton.disabled = false;
        magicButton.textContent = "Invia Magic Link";
      }
    });

    // Controlla se l'utente è già autenticato
    const checkAuth = async () => {
      try {
        const isAuthenticated = await auth.isAuthenticated();
        if (isAuthenticated) {
          // Reindirizza all'area admin
          window.location.href = "/admin";
        }
      } catch (error) {
        console.error(
          "Errore durante il controllo dell'autenticazione:",
          error
        );
      }
    };

    // Controlla l'autenticazione all'avvio
    checkAuth();
  });
</script>

<style>
  .login-container {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: calc(100vh - 130px);
    padding: 20px;
  }

  .login-card {
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
    width: 100%;
    max-width: 400px;
    padding: 30px;
  }

  .login-card h1 {
    font-size: 1.5rem;
    text-align: center;
    margin-bottom: 20px;
  }

  .tabs {
    display: flex;
    margin-bottom: 20px;
    border-bottom: 1px solid #eee;
  }

  .tab-button {
    flex: 1;
    padding: 10px;
    background: none;
    border: none;
    cursor: pointer;
    font-weight: 500;
    color: #666;
    border-bottom: 2px solid transparent;
  }

  .tab-button.active {
    color: #2196f3;
    border-bottom: 2px solid #2196f3;
  }

  .tab-content {
    display: block;
  }

  .hidden {
    display: none;
  }

  .login-form {
    margin-bottom: 20px;
  }

  .form-group {
    margin-bottom: 15px;
  }

  .form-group label {
    display: block;
    margin-bottom: 5px;
    font-weight: 500;
  }

  .form-group input {
    width: 100%;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 16px;
  }

  .info-message {
    font-size: 14px;
    color: #666;
    margin-bottom: 15px;
  }

  .error-message {
    color: #f44336;
    font-size: 14px;
    min-height: 20px;
    margin: 10px 0;
  }

  .login-button {
    width: 100%;
    padding: 12px;
    background-color: #2196f3;
    color: white;
    border: none;
    border-radius: 4px;
    font-size: 16px;
    cursor: pointer;
    transition: background-color 0.2s;
  }

  .login-button:hover {
    background-color: #1976d2;
  }

  .login-button:disabled {
    background-color: #b0c5ff;
    cursor: not-allowed;
  }

  .success-message {
    text-align: center;
    padding: 20px 0;
  }

  .success-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 60px;
    height: 60px;
    background-color: #4caf50;
    color: white;
    border-radius: 50%;
    font-size: 30px;
    margin: 0 auto 15px;
  }

  .success-message h3 {
    margin-bottom: 10px;
    color: #4caf50;
  }

  .success-message p {
    color: #666;
  }
</style>
